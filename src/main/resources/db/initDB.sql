DROP TABLE votes IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE users IF EXISTS;


DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100000;

CREATE TABLE restaurants
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  address          VARCHAR(255)            NOT NULL,
  CONSTRAINT restaurant_unique_idx UNIQUE (name, address)
);

CREATE TABLE dishes
(
  id              INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name            VARCHAR(255)                  NOT NULL,
  date            DATE DEFAULT CURRENT_DATE     NOT NULL,
  price           INTEGER                       NOT NULL,
  restaurant_id   INTEGER                       NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE,
  CONSTRAINT dishes_unique_idx UNIQUE (restaurant_id, date, name)
);

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  role             VARCHAR(255)            NOT NULL
);
CREATE UNIQUE INDEX users_unique_idx ON USERS (email);


CREATE TABLE votes
(
  id                 INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date           DATE DEFAULT CURRENT_DATE      NOT NULL,
  user_id            INTEGER                        NOT NULL,
  restaurant_id      INTEGER                        NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE,
  CONSTRAINT vote_unique_idx UNIQUE (user_id, date)
);




