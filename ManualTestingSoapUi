1. Restaurant Controllers
    1.1. AdminRestaurantController
        -RestaurantTo get(int id)

        //get BUSHE with today menu
        curl: GET /admin/restaurants/100003
        output: {  "id": 100003,
                   "name": "bushe",
                   "address": "addressBushe",
                   "menu": [   {
                      "id": 100019,
                      "name": "cake_special",
                      "price": 18080,
                      "date": "2018-09-18"}  ]  }

        //get by invalid restaurantId
         curl: GET /admin/restaurants/100020
         output:{"url": "http://localhost:8080/admin/restaurants/100020",
                   "cause": "NotFoundException",
                   "detail": "Not found entity with id=100020"}


        -List<Restaurant> getAll()
        //get All Restaurants without Dishes and Votes
        curl: GET /admin/restaurants
        output:[{ "id": 100003,
                     "name": "bushe",
                     "address": "addressBushe",
                     "dishes": null,
                     "votes": null },
                     {"id": 100002,
                     "name": "ketchup",
                     "address": "addressKetchup",
                     "dishes": null,
                     "votes": null},
                     {"id": 100000,
                     "name": "kfc",
                     "address": "addressKfc",
                     "dishes": null,
                     "votes": null},
                     {"id": 100001,
                     "name": "mcDonalds",
                     "address": "addressMcDonalds",
                     "dishes": null,
                     "votes": null}]
        -void delete(int id)
        //delete Bushe
        curl: DELETE /admin/restaurants/100003
        output: getAll показывает отсутствие удаленного ресторана

        //delete invalid restaurantId
        curl: DELETE /admin/restaurants/100020
        output: {"url": "http://localhost:8080/admin/restaurants/100020",
                                           "cause": "NotFoundException",
                                           "detail": "Not found entity with id=100020"}

        -ResponseEntity<Restaurant> createWithLocation(RestaurantTo restaurantTo)
        //create new restaurant
        curl: POST /admin/restaurants  {"name": "newRest", "address": "newAddress"}
        output: {"id": 100026, "name": "newRest", "address": "newAddress"}

        //create duplicate name&address - "DataIntegrityViolationException"
        // create invalid name/address - "MethodArgumentNotValidException"

        -void update(RestaurantTo restaurantTo, int id)
        //update Bushe
        curl: PUT /admin/restaurants/100003  {"name": "updatedRest", "address": "updatedAddress"}

        //update invalidId - "NotFoundException"
        //update invalid name/address - "MethodArgumentNotValidException"
        //update duplicate name+address -"DataIntegrityViolationException"
        //update the same name+address - ok, меняет на те же данные

2. Dish Controllers
    -Dish get(int dishId, int restaurantId)


    -List<Dish> getAll(int restaurantId)
    -List<Dish> getTodayMenu(int restaurantId)
    -void delete(dishId, restaurantId)
    -ResponseEntity<Dish> create(restaurantId, dish)
    -Dish create(int restaurantId, Dish dish)
    -void update(int restaurantId, int dishId, Dish dish)


3. User Controllers
4. VoteControllers
5. Security


